import 'package:pharmacie_stock/models/alert.dart';
import 'package:pharmacie_stock/models/sale_model.dart';
import 'package:pharmacie_stock/models/supplier.dart';
import 'package:pharmacie_stock/models/user.dart';

import '../models/category.dart';
import '../models/product.dart';
import '../models/transaction.dart';

final List<Product> initialProducts = [
  Product.fromJson({
    'id': '1',
    'name': 'Paracétamol 500mg',
    'price': 500,
    'purchasePrice': 300,
    'quantity': 25,
    'minStock': 10,
    'category': 'Antidouleur',
    'description': 'Comprimés pour douleurs et fièvre',
    'updatedAtInUtc': '2025-01-01',
    'createdAtInUtc': '2025-01-01',
  }),
  Product.fromJson({
    'id': '2',
    'name': 'Vitamine C 1000mg',
    'price': 800,
    'purchasePrice': 500,
    'quantity': 5,
    'minStock': 15,
    'category': 'Vitamines',
    'description': 'Comprimés effervescents',
    'createdAtInUtc': '2025-01-01',
    'updatedAtInUtc': '2025-01-01',
  }),
  Product.fromJson({
    'id': '3',
    'name': 'Antigrippal',
    'price': 1200,
    'purchasePrice': 800,
    'quantity': 3,
    'minStock': 8,
    'category': 'Rhume & Grippe',
    'description': 'Traitement symptomatique du rhume',
    'createdAtInUtc': '2025-01-01',
    'updatedAtInUtc': '2025-01-01',
  }),
  Product.fromJson({
    'id': '4',
    'name': 'Sirop contre la toux',
    'price': 1500,
    'purchasePrice': 1000,
    'quantity': 12,
    'minStock': 5,
    'category': 'Rhume & Grippe',
    'description': 'Sirop expectorant 125ml',
    'createdAtInUtc': '2025-01-01',
    'updatedAtInUtc': '2025-01-01',
  }),
  Product.fromJson({
    'id': '5',
    'name': 'Aspirine 500mg',
    'price': 400,
    'purchasePrice': 250,
    'quantity': 18,
    'minStock': 10,
    'category': 'Antidouleur',
    'description': 'Comprimés anti-inflammatoires',
    'createdAtInUtc': '2025-01-01',
    'updatedAtInUtc': '2025-01-01',
  }),
];

final List<Sale> initialSales = [
  Sale.fromJson({
    'id': '1',
    'salesItems': [
      {
        'productId': '1',
        'productName': 'Paracétamol 500mg',
        'quantity': 2,
        'unitPrice': 500,
        'total': 1000,
      },
    ],
    'priceInUTC': 1000,
    'createdAtInUtc': '2025-01-07T10:30:00',
    'cashier': 'Pharmacien Principal',
    'updatedBy': '1',
  }),
];
final List<Category> fakeCategories = [
  Category.fromJson({
    'id': '1',
    'name': 'Antibiotics',
    'description': 'Antimicrobial medications',
    'createdAtInUtc': '2024-01-01',
  }),
  Category.fromJson({
    'id': '2',
    'name': 'Analgesics',
    'description': 'Pain relief medications',
    'createdAtInUtc': '2024-01-01',
  }),
  Category.fromJson({
    'id': '3',
    'name': 'Vitamins',
    'description': 'Vitamin supplements',
    'createdAtInUtc': '2024-01-01',
  }),
  Category.fromJson({
    'id': '4',
    'name': 'Cardiovascular',
    'description': 'Heart and blood pressure medications',
    'createdAtInUtc': '2024-01-01',
  }),
  Category.fromJson({
    'id': '5',
    'name': 'Respiratory',
    'description': 'Respiratory system medications',
    'createdAtInUtc': '2024-01-01',
  }),
];

final List<Supplier> fakeSuppliers = [
  Supplier.fromJson({
    'id': '1',
    'name': 'PharmaCorp Ltd',
    'contactPerson': 'John Smith',
    'phone': '+1-555-0123',
    'isActive': true,
    'email': 'john@pharmacorp.com',
    'address': '123 Medical Ave, Health City, HC 12345',
    'createdAtInUtc': '2024-01-01',
  }),
  Supplier.fromJson({
    'id': '2',
    'name': 'MediSupply Inc',
    'contactPerson': 'Sarah Johnson',
    'phone': '+1-555-0456',
    'email': 'sarah@medisupply.com',
    'isActive': true,
    'address': '456 Pharma Street, Drug Town, DT 67890',
    'createdAtInUtc': '2024-01-01',
  }),
  Supplier.fromJson({
    'id': '3',
    'name': 'HealthDistro Co',
    'contactPerson': 'Michael Brown',
    'phone': '+1-555-0789',
    'isActive': false,
    'email': 'michael@healthdistro.com',
    'address': '789 Supply Blvd, Medicine City, MC 11111',
    'createdAtInUtc': '2024-01-01',
  }),
];

final List<Product> fakeProducts = [
  Product.fromJson({
    'id': '1',
    'name': 'Amoxicillin 500mg',
    'barcode': '1234567890123',
    'categoryId': '1',
    'price': 12.99,
    'quantity': 150,
    'expiryDate': '2025-06-15',
    'supplierId': '1',
    'minStock': 50,
    'reorderThreshold': 50,
    'batchNumber': 'AMX2024001',
    'manufacturer': 'PharmaCorp Ltd',
    'createdAtInUtc': '2024-01-01',
    'updatedAtInUtc': '2024-01-15',
  }),
  Product.fromJson({
    'id': '2',
    'name': 'Ibuprofen 400mg',
    'barcode': '2345678901234',
    'categoryId': '2',
    'price': 8.50,
    'quantity': 25,
    'expiryDate': '2024-12-30',
    'supplierId': '2',
    'minStock': 30,
    'reorderThreshold': 50,
    'batchNumber': 'IBU2024002',
    'manufacturer': 'MediSupply Inc',
    'createdAtInUtc': '2024-01-01',
    'updatedAtInUtc': '2024-01-15',
  }),
  Product.fromJson({
    'id': '3',
    'name': 'Vitamin D3 1000IU',
    'barcode': '3456789012345',
    'categoryId': '3',
    'price': 15.75,
    'reorderThreshold': 50,
    'quantity': 200,
    'expiryDate': '2025-03-20',
    'supplierId': '3',
    'minStock': 75,
    'batchNumber': 'VIT2024003',
    'manufacturer': 'HealthDistro Co',
    'createdAtInUtc': '2024-01-01',
    'updatedAtInUtc': '2024-01-15',
  }),
  Product.fromJson({
    'id': '4',
    'name': 'Lisinopril 10mg',
    'barcode': '4567890123456',
    'categoryId': '4',
    'price': 22.30,
    'reorderThreshold': 50,
    'quantity': 80,
    'expiryDate': '2024-11-10',
    'supplierId': '1',
    'minStock': 40,
    'batchNumber': 'LIS2024004',
    'manufacturer': 'PharmaCorp Ltd',
    'createdAtInUtc': '2024-01-01',
    'updatedAtInUtc': '2024-01-15',
  }),
  Product.fromJson({
    'id': '5',
    'name': 'Albuterol Inhaler',
    'barcode': '5678901234567',
    'categoryId': '5',
    'price': 35.99,
    'reorderThreshold': 50,
    'quantity': 12,
    'expiryDate': '2024-10-05',
    'supplierId': '2',
    'minStock': 20,
    'batchNumber': 'ALB2024005',
    'manufacturer': 'MediSupply Inc',
    'createdAtInUtc': '2024-01-01',
    'updatedAtInUtc': '2024-01-15',
  }),
];

final List<User> fakeUsers = [
  User.fromJson({
    'id': '1',
    'name': 'Admin User',
    'email': 'admin@pharmacy.com',
    'role': 'admin',
    'passwordHash': 'hashed_password_1',
    'createdAtInUtc': '2024-01-14T16:45:00Z',
    'lastLogin': '2024-01-15T10:30:00Z',
    'permissions': [
      'inventory',
      PermissionType.reports.name,
      PermissionType.sales.name,
      PermissionType.updateSettings.name,
    ],
  }),
  User.fromJson({
    'id': '2',
    'name': 'Dr. Jane Pharmacist',
    'email': 'jane@pharmacy.com',
    'role': 'pharmacist',
    'passwordHash': 'hashed_password_2',
    'createdAtInUtc': '2024-01-14T16:45:00Z',
    'lastLogin': '2024-01-15T09:15:00Z',
    'permissions': [
      PermissionType.inventory.name,
      PermissionType.reports.name,
      PermissionType.sales.name,
    ],
  }),
  User.fromJson({
    'id': '3',
    'name': 'Store Assistant',
    'email': 'assistant@pharmacy.com',
    'role': 'assistant',
    'permissions': [PermissionType.sales.name],
    'passwordHash': 'hashed_password_3',
    'createdAtInUtc': '2024-01-14T16:45:00Z',
    'lastLogin': '2024-01-14T16:45:00Z',
  }),
];

final List<Transaction> fakeTransactions = [
  Transaction.fromJson({
    'id': '1',
    'type': 'stockIn',
    'productId': '1',
    'userId': '2',
    'quantity': 3,
    'price': 12.99,
    'total': 38.97,
    'date': '2024-01-15T14:30:00Z',
    'notes': 'Sold to customer',
    'receiptNumber': 'RCP-001',
  }),
  Transaction.fromJson({
    'id': '2',
    'type': 'sale',
    'productId': '2',
    'userId': '1',
    'quantity': 50,
    'price': 8.50,
    'total': 425.00,
    'date': '2024-01-14T10:00:00Z',
    'notes': 'Stock replenishment',
  }),
  Transaction.fromJson({
    'id': '3',
    'type': 'stockIn',
    'productId': '3',
    'userId': '3',
    'quantity': 2,
    'price': 15.75,
    'total': 31.50,
    'date': '2024-01-15T16:15:00Z',
    'notes': 'Sold to customer',
    'receiptNumber': 'RCP-002',
  }),
];

final List<Alert> fakeAlerts = [
  Alert.fromJson({
    'id': '1',
    'type': 'low_stock',
    'message': 'Ibuprofen 400mg is running low (25 units remaining)',
    'severity': 'high',
    'productId': '2',
    'createdAtInUtc': '2024-01-15T08:00:00Z',
    'read': false,
  }),
  Alert.fromJson({
    'id': '2',
    'type': 'expiry',
    'message': 'Albuterol Inhaler expires in 8 months',
    'severity': 'medium',
    'productId': '5',
    'createdAtInUtc': '2024-01-15T08:00:00Z',
    'read': false,
  }),
  Alert.fromJson({
    'id': '3',
    'type': 'low_stock',
    'message': 'Albuterol Inhaler is critically low (12 units remaining)',
    'severity': 'high',
    'productId': '5',
    'createdAtInUtc': '2024-01-15T08:00:00Z',
    'read': true,
  }),
];
